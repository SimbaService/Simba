package com.necla.simba.protocol;

option java_package = "com.necla.simba.protocol";
import "common.proto";

//message LogMessage {
//	required string id = 1; //row key
//	optional int32 version = 2;
//	repeated string old_objects = 3;
//	repeated string new_objects = 4;
//}

message Notification {
	required string table = 1; //simba table id
	required int32 version = 2;
}

message ClientSubscription {
	required string table = 1;
	required int32 period = 2;
	required int32 dt = 3;
}

message RequestClientSubscriptions {
	required string clientId = 1;
}

message RestoreClientSubscriptions {
	required string clientId = 1;
	repeated ClientSubscription sub = 2;
}

message SaveClientSubscription {
	required string clientId = 1;
	required ClientSubscription sub = 2;
}

message TableVersion {
	required string table = 1;
	required int32 version = 2;
}

message Ping {

}

// Generic operation response
message OperationResponse {
	required bool status = 1;
	required string msg = 2;
}

message GetRowsRequest {
	required string app = 1;
	required string tbl = 2;
	optional string startRowId = 3;
	optional int32 limit = 4;
}

message GetRowsResponse {
	required SyncHeader data = 1;
}
	

message SimbaMessage {
	enum Type {
		SYNC_REQUEST = 1;
		SYNC_RESPONSE = 2;
		PULL_DATA = 3;
		NOTIFY = 4;
		NOTIFY_PULL = 5;
		CREATE_TBL = 6;
		SUB_TBL = 7;
		UNSUB_TBL = 8;
		DROP_TBL = 9;
		SAVE_CLIENT_SUBSCRIPTION = 10;
		RESTORE_CLIENT_SUBSCRIPTIONS = 11;
		REQUEST_CLIENT_SUBSCRIPTIONS = 12;
		OBJECT_FRAGMENT = 13;
		TORN_REQUEST = 14;
		TORN_RESPONSE = 15;
		SUB_RESPONSE = 16;
		PING = 17;
		TABLE_VERSION = 18;
		ABORT_TRANSACTION = 19;
		OP_RESPONSE = 20;
		GET_ROWS_REQUEST = 21;
		GET_ROWS_RESPONSE = 22;
	}

	required Type type = 1;
	optional int32 seq = 2;
	// TODO: fix this later, the token is required
	// for certain kinds of message, i.e. most of the requests
	// we need to split between the tokened messages and non-tokened messages
	optional string token = 3;
	optional SyncRequest syncRequest = 4;
	optional SyncResponse syncResponse = 5;
	optional PullData pullData = 6;
	optional Notification notify = 7;
	optional NotificationPull notifypull = 8;
	optional CreateTable createTable = 9;
	optional SubscribeTable subscribeTable = 10;
	optional UnsubscribeTable unsubscribeTable = 11;
	optional DropTable dropTable = 12;
	optional RestoreClientSubscriptions restoreClientSubscriptions = 13;
	optional SaveClientSubscription saveClientSubscription = 14;
	optional RequestClientSubscriptions requestClientSubscriptions = 15;
	optional ObjectFragment objectFragment = 16;
	optional TornRowRequest tornRowRequest = 17;
	optional TornRowResponse tornRowResponse = 18;
	optional SubscribeResponse subscribeResponse = 19;
	optional Ping ping = 20;
	optional TableVersion tableVersion = 21;
	optional AbortTransaction abortTransaction = 22;
	optional OperationResponse operationResponse = 23;
	optional GetRowsRequest getRowsRequest = 24;
	optional GetRowsResponse getRowsResponse = 25;
}


